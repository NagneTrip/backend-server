<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.nagne.repository.ArticleRepository">
    <insert id="save" parameterType="Article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article(user_id,
                            content,
                            good,
                            created_date,
                            last_modified_date)
        VALUES (#{article.userId},
                #{article.content},
                #{article.good},
                now(),
                now())
    </insert>

    <resultMap id="ArticleWithImage" type="Article">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="content" property="content"/>
        <result column="good" property="good"/>
        <result column="created_date" property="createdDate"/>
        <result column="last_modified_date" property="lastModifiedDate"/>
        <collection property="imageUrls" ofType="java.lang.String">
            <result column="url" property="url"/>
        </collection>
    </resultMap>

    <select id="findById" resultMap="ArticleWithImage">
        SELECT *
        FROM article
                 LEFT JOIN image ON article.id = image.article_id
        WHERE article.id = #{id}
    </select>

    <select id="findArticles" resultMap="ArticleWithImage">
        SELECT *
        FROM article LEFT JOIN image ON article.id = image.article_id
        WHERE article.id IN (
        SELECT DISTINCT article_id
        FROM article_hashtag
        WHERE hashtag_name IN (
        <foreach collection="tags" item="tag" separator=",">
            #{tag}
        </foreach>
        )
        AND article_id &lt; #{pageable.lastIndex}
        ORDER BY article_id DESC LIMIT #{pageable.size}
        )
    </select>

    <select id="findFollowerArticles" resultMap="ArticleWithImage">
        SELECT *
        FROM article
                 LEFT JOIN image ON article.id = image.article_id
        WHERE id IN (SELECT article.id
                     FROM follow
                              LEFT JOIN article ON follow.following_id = article.user_id
                     WHERE follower_id = #{userId}
                       AND article.id &lt; #{pageable.lastIndex}
                     ORDER BY article.id DESC LIMIT#{pageable.size})
        ORDER BY id DESC
    </select>

    <select id="findBookmarkArticles" resultMap="ArticleWithImage">
        SELECT *
        FROM article
                 LEFT JOIN image ON article.id = image.article_id
        WHERE id IN (SELECT article_id
                     FROM bookmark
                     WHERE user_id = #{userId}
                       AND article_id &lt; #{pageable.lastIndex}
                     ORDER BY article_id DESC LIMIT #{pageable.size})
        ORDER BY id DESC
    </select>

    <update id="update">
        UPDATE article
        SET
        <if test="article.content != null">
            content = #{article.content},
        </if>
        last_modified_date = now()
        WHERE id = #{article.id}
    </update>

    <delete id="delete">
        DELETE
        FROM article
        WHERE id = #{id}
    </delete>
</mapper>